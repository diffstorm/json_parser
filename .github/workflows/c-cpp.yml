name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: Debug

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake lcov
        sudo apt-get install -y libgtest-dev googletest

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -fprofile-update=atomic -O0"

    - name: Build
      run: cmake --build build --clean-first

    - name: Run C demo
      working-directory: ./build
      run: ./demo

    - name: Run C++ demo
      working-directory: ./build
      run: ./demo_cpp

    - name: Compare demo outputs
      working-directory: ./build
      run: |
        ./demo > output1.txt
        ./demo_cpp > output2.txt
        if ! diff -q output1.txt output2.txt; then
          echo "Outputs differ!"
          diff output1.txt output2.txt
          exit 1
        else
          echo "Outputs equal!"
        fi

    - name: Run Tests
      working-directory: ./build
      run: ./json_parser_tests

    - name: Run Json File Validation Test
      working-directory: ./build
      run: ./validation_test

    - name: Generate Coverage Report
      run: |
        lcov --capture --directory ./build --output-file coverage.info \
             --rc geninfo_unexecuted_blocks=1 \
             --ignore-errors mismatch,negative
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info || true  # Prevent failure on warnings

    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.info
        fail_ci_if_error: false
